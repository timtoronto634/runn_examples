desc: DBに結果を格納する
runners:
  req: https://zenn.dev
  local: sq://tutorial.db
vars:
  username: ${USER:-timtoronto}
  order: "daily"
steps:
  check:
    exec:
      # desc: "変数出力"
      command: echo "username {{ vars.username }}, order {{ vars.order }}"
    dump: current.stdout
    test: 'current.stdout contains "tim"'
  initSchame:
    desc: "スキーマ作成"
    include: init-db.yml
  listArticles:
    desc: "指定された件数分、記事一覧を取得します"
    req:
      /api/articles?username={{ vars.username }}&order={{ vars.order }}:
        get:
          body:
            application/json: null
    test: |
      # ステータスコードが200であること
      current.res.status == 200
    bind:
      articles: current.res.body.articles
  saveArticles:
    desc: "記事をテーブルに保存する"
    loop: len(articles)
    local:
      query: |
        INSERT INTO
            article (id, title, slug, article_type, liked_count)
        VALUES
            (
                {{ articles[i].id }},
                '{{ articles[i].title }}',
                '{{ articles[i].slug }}',
                '{{ articles[i].article_type }}',
                {{ articles[i].liked_count }}
            );
    test: |
      # insertされたIDが正しいこと
      current.last_insert_id == articles[i].id
      # 影響があった行数が正しいこと
      && current.rows_affected == 1
  countLiked:
    desc: "いいね数をカウントする"
    local:
      query: select sum(liked_count) as sum_likes from article;
    dump: current.rows[0].sum_likes